// This file is auto-generated by @hey-api/openapi-ts

export type BearerResponse = {
  access_token: string;
  token_type: string;
};

export type Body_auth_reset_forgot_password = {
  email: string;
};

export type Body_auth_reset_reset_password = {
  token: string;
  password: string;
};

export type Body_auth_verify_request_token = {
  email: string;
};

export type Body_auth_verify_verify = {
  token: string;
};

export type Body_Script_Generation_generate_script_from_pdf = {
  file: Blob | File;
};

export type Body_Videos_upload_video = {
  title: string;
  description?: string | null;
  file: Blob | File;
};

export type ErrorModel = {
  detail:
    | string
    | {
        [key: string]: string;
      };
};

export type HTTPValidationError = {
  detail?: Array<ValidationError>;
};

export type LessonCreate = {
  /**
   * Lesson title
   */
  title: string;
  user_id: string;
};

export type LessonRead = {
  /**
   * Lesson title
   */
  title: string;
  id: string;
  created_at: string;
  user_id: string;
};

export type LessonVideoAddResponse = {
  lesson_id: string;
  video_id: string;
  index: number;
};

export type login = {
  grant_type?: string | null;
  username: string;
  password: string;
  scope?: string;
  client_id?: string | null;
  client_secret?: string | null;
};

export type Page_VideoRead_ = {
  items: Array<VideoRead>;
  total?: number | null;
  page: number | null;
  size: number | null;
  pages?: number | null;
};

export type ScriptIn = {
  content: string;
};

export type TTImageRequest = {
  /**
   * Text prompt for image generation
   */
  prompt: string;
  /**
   * Number of images to generate (max 1)
   */
  n: number;
  /**
   * Image size: '1024x1024', '512x512', or '256x256'
   */
  size?: string;
};

export type TTImageResponse = {
  image_url: string;
};

export type TTSRequest = {
  /**
   * Text to synthesize into speech
   */
  text: string;
  /**
   * Description of the voice characteristics (e.g., 'warm female voice with slight accent')
   */
  voice_description: string;
  /**
   * Audio format: 'mp3' or 'wav'
   */
  format?: string;
};

export type TTSResponse = {
  audio_url?: string | null;
  audio_base64?: string | null;
  format: string;
  message: string;
};

export type UserCreate = {
  email: string;
  password: string;
  is_active?: boolean | null;
  is_superuser?: boolean | null;
  is_verified?: boolean | null;
};

export type UserRead = {
  id: string;
  email: string;
  is_active?: boolean;
  is_superuser?: boolean;
  is_verified?: boolean;
};

export type UserUpdate = {
  password?: string | null;
  email?: string | null;
  is_active?: boolean | null;
  is_superuser?: boolean | null;
  is_verified?: boolean | null;
};

export type ValidationError = {
  loc: Array<string | number>;
  msg: string;
  type: string;
};

export type VideoGenerateRequest = {
  audio: TTSRequest;
  images: TTImageRequest;
  lesson_id: string;
  title: string | null;
};

export type VideoRead = {
  title: string;
  description?: string | null;
  id: string;
  filename: string;
  file_size: number;
  created_at: string;
};

export type AuthJwtLoginData = {
  body: login;
};

export type AuthJwtLoginResponse = BearerResponse;

export type AuthJwtLoginError = ErrorModel | HTTPValidationError;

export type AuthJwtLogoutResponse = unknown;

export type AuthJwtLogoutError = unknown;

export type RegisterRegisterData = {
  body: UserCreate;
};

export type RegisterRegisterResponse = UserRead;

export type RegisterRegisterError = ErrorModel | HTTPValidationError;

export type ResetForgotPasswordData = {
  body: Body_auth_reset_forgot_password;
};

export type ResetForgotPasswordResponse = unknown;

export type ResetForgotPasswordError = HTTPValidationError;

export type ResetResetPasswordData = {
  body: Body_auth_reset_reset_password;
};

export type ResetResetPasswordResponse = unknown;

export type ResetResetPasswordError = ErrorModel | HTTPValidationError;

export type VerifyRequestTokenData = {
  body: Body_auth_verify_request_token;
};

export type VerifyRequestTokenResponse = unknown;

export type VerifyRequestTokenError = HTTPValidationError;

export type VerifyVerifyData = {
  body: Body_auth_verify_verify;
};

export type VerifyVerifyResponse = UserRead;

export type VerifyVerifyError = ErrorModel | HTTPValidationError;

export type UsersCurrentUserResponse = UserRead;

export type UsersCurrentUserError = unknown;

export type UsersPatchCurrentUserData = {
  body: UserUpdate;
};

export type UsersPatchCurrentUserResponse = UserRead;

export type UsersPatchCurrentUserError =
  | ErrorModel
  | unknown
  | HTTPValidationError;

export type UsersUserData = {
  path: {
    id: string;
  };
};

export type UsersUserResponse = UserRead;

export type UsersUserError = unknown | HTTPValidationError;

export type UsersPatchUserData = {
  body: UserUpdate;
  path: {
    id: string;
  };
};

export type UsersPatchUserResponse = UserRead;

export type UsersPatchUserError = ErrorModel | unknown | HTTPValidationError;

export type UsersDeleteUserData = {
  path: {
    id: string;
  };
};

export type UsersDeleteUserResponse = void;

export type UsersDeleteUserError = unknown | HTTPValidationError;

export type GenerateVideoData = {
  body: VideoGenerateRequest;
};

export type GenerateVideoResponse = VideoRead;

export type GenerateVideoError = HTTPValidationError;

export type UploadVideoData = {
  body: Body_Videos_upload_video;
};

export type UploadVideoResponse = VideoRead;

export type UploadVideoError = HTTPValidationError;

export type ListVideosData = {
  query?: {
    /**
     * Page number
     */
    page?: number;
    /**
     * Page size
     */
    size?: number;
  };
};

export type ListVideosResponse = Page_VideoRead_;

export type ListVideosError = HTTPValidationError;

export type GetVideoData = {
  path: {
    video_id: string;
  };
};

export type GetVideoResponse = VideoRead;

export type GetVideoError = HTTPValidationError;

export type DeleteVideoData = {
  path: {
    video_id: string;
  };
};

export type DeleteVideoResponse = unknown;

export type DeleteVideoError = HTTPValidationError;

export type StreamVideoData = {
  path: {
    video_id: string;
  };
};

export type StreamVideoResponse = unknown;

export type StreamVideoError = HTTPValidationError;

export type SynthesizeSpeechData = {
  body: TTSRequest;
};

export type SynthesizeSpeechResponse = TTSResponse;

export type SynthesizeSpeechError = HTTPValidationError;

export type GenerateImageData = {
  body: TTImageRequest;
};

export type GenerateImageResponse = TTImageResponse;

export type GenerateImageError = HTTPValidationError;

export type CreateLessonData = {
  body: LessonCreate;
};

export type CreateLessonResponse = LessonRead;

export type CreateLessonError = HTTPValidationError;

export type AddVideoToLessonData = {
  body: LessonVideoAddResponse;
  path: {
    lesson_id: string;
  };
};

export type AddVideoToLessonResponse = LessonVideoAddResponse;

export type AddVideoToLessonError = HTTPValidationError;

export type GetLessonData = {
  path: {
    lesson_id: string;
  };
};

export type GetLessonResponse = LessonRead;

export type GetLessonError = HTTPValidationError;

export type GetVideoByIndexData = {
  path: {
    index: number;
    lesson_id: string;
  };
};

export type GetVideoByIndexResponse = unknown;

export type GetVideoByIndexError = HTTPValidationError;

export type HasNextVideoData = {
  path: {
    index: number;
    lesson_id: string;
  };
};

export type HasNextVideoResponse = unknown;

export type HasNextVideoError = HTTPValidationError;

export type GenerateScriptFromPdfData = {
  body: Body_Script_Generation_generate_script_from_pdf;
};

export type GenerateScriptFromPdfResponse = unknown;

export type GenerateScriptFromPdfError = HTTPValidationError;

export type SaveScriptData = {
  body: ScriptIn;
};

export type SaveScriptResponse = unknown;

export type SaveScriptError = HTTPValidationError;

export type RootResponse = unknown;

export type RootError = unknown;
